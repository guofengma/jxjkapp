<style lang="scss">
@import '../assets/style/variables/theme.scss';
.comp-picker-list {
  .menu--default {
    &__item {
      .item-label {
        color: #818181;
      }
      .arrow-rt {
        margin-left: 10rpx;
      }
    }
  }

}
</style>

<template>
  <view class="comp-picker-list">
    <view class="menu--default">
      <repeat for="{{ ITEMS }}" key="index" item="item" index="index">
        <view class="menu--default__item">
          <text class="item-label">{{ item.label }}</text>
          <picker 
            wx:if="{{ (lists[item.picker.rangeBind] || (item.picker.mode && item.picker.mode !== 'selector')) && !readonly}}"
            value="{{ pickedIndex[item.picker.valueBind] === -1 ? 0 : pickedIndex[item.picker.valueBind] }}"
            mode="{{ item.picker.mode || 'selector' }}"
            range="{{ lists[item.picker.rangeBind] }}" 
            range-key="label"
            start="{{ currDate }}"
            bindchange="handlePickerChange({{ item.picker.valueBind }}, {{ item.picker.rangeBind }})">
            <view class="item-value">
              <text>{{ pickeds[item.picker.valueBind] !== undefined ? (lists[item.picker.rangeBind][pickedIndex[item.picker.valueBind]].label || lists[item.picker.rangeBind][pickedIndex[item.picker.valueBind]] || pickedIndex[item.picker.valueBind]) : '请选择' }}</text>
              <view class="arrow-rt"></view>
            </view>
          </picker>
          <view wx:else class="item-value">
            <text>{{ pickeds[item.picker.valueBind] !== undefined ? (lists[item.picker.rangeBind][pickedIndex[item.picker.valueBind]].label || lists[item.picker.rangeBind][pickedIndex[item.picker.valueBind]] || pickeds[item.picker.valueBind]) : '未选择' }}</text>
          </view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class CustomCard extends wepy.component {
    components = {
    }

    props = {
      readonly: {
        type: Boolean,
        default: false
      },
      ITEMS: {
        type: Array,
        default: []
      },
      lists: {
        type: Object,
        default: {
          hospitalList: [],
          projectList: [],
          orderDateList: [],
          orderTimeList: []
        }
      },
      pickeds: {
        type: Object,
        twoWay: true,
        default: {
          hospital: '',
          projectName: '',
          orderDate: '',
          orderTime: ''
        }
      }
    }

    mixins = []

    data = {
    }

    computed = {
      // 当前日期
      currDate () {
        return this.$_convertDate(new Date().getTime())
      },
      pickedIndex () {
        const lists = this.lists
        const pickeds = this.pickeds
        let returnVal = {}
        this.ITEMS.forEach(item => {
          const valueBind = item.picker.valueBind
          const rangeBind = item.picker.rangeBind
          const index = (lists[rangeBind] || []).findIndex(_item => {
            if (typeof _item === 'object') {
              return _item.value === pickeds[valueBind] || _item.label === pickeds[valueBind]
            } else {
              return _item === pickeds[valueBind]
            }
          })
          returnVal[valueBind] = index === -1 ? pickeds[valueBind] : index
        })
        console.log('returnVal', returnVal)
        return returnVal
      }
    }

    watch = {
      pickeds (newVal) {
        console.log('newVal', newVal)
      }
    }

    methods = {
      handlePickerChange (valueBind, rangeBind, { detail }) {
        const index = detail.value
        console.log('index', index, this.pickedIndex)
        if (typeof +index === 'number' && +index === +index) {
          if (index !== -1) {
            const currItem = this.lists[rangeBind][index]
            if (typeof currItem === 'object') {
              this.pickeds[valueBind] = currItem.value
            } else {
              this.pickeds[valueBind] = currItem
            }
          }
        } else {
          this.pickeds[valueBind] = index
        }
      }
    }

    events = {
    }

    onLoad() {
    }
  }
</script>
