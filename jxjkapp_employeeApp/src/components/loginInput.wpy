<style lang="scss">
.comp-tel-input {
  .input-group + .input-group {
    border-top: 2rpx solid #F2F2F2;
  }
  .code-btn {
    width: 86px;
  }

  .btn-wrap {
    button {
      margin-top: 100rpx;
    }
  }
}
</style>

<template>
  <view>
        <view class="page-title-wrap">{{ title }}</view>
        <view class="comp-tel-input">
            <view class="input-box">
            <view class="input-group">
                <UserNameInput
                class="input-group__inner"
                :value.sync="username" 
                placeholder="请输入员工账号"/>
            </view>
            <view 
                class="input-group">
                <PasswordInput
                class="input-group__inner"
                :value.sync="password" 
                type="password"
                placeholder="请输入密码"/>
            </view>
            </view>
            <view class="btn-wrap flex--hcenter">
            <button 
                class="primary-btn"
                disabled="{{ !usernameIsValid || !passwordIsValid }}"
                @tap="submit">{{ submitBtnText }}</button>
            </view>
        </view>
    </view>
</template>

<script>
  import wepy from 'wepy'
  import CustomInput from '@/components/baseComponents/customInput'
  import {
    validUserName,
    validPwd
  } from '@/utils/validator'

  export default class login extends wepy.component {
    components = {
      UserNameInput: CustomInput,
      PasswordInput: CustomInput
    }

    props = {
      value: {
        type: Object,
        twoWay: true
      },
      title: {
        type: String
      },
      submitBtnText: {
        type: String
      },
      codeType: {
        type: String,
        default: '0'
      }
    }

    mixins = []

    data = {
      username: '', // 用户账号
      password: '', // 密码
      usernameIsValid: false, // 判断用户账号有效性
      passwordIsValid: false // 判断密码是否有效性
    }

    watch = {
      username (newVal) {
        this.usernameIsValid = validUserName(newVal)
      },
      password (newVal) {
        this.passwordIsValid = validPwd(newVal)
      }
    }

    computed = {
    }

    methods = {
      submit () {
        this.$emit('submit')
      }
    }

    events = {
    }
  }
</script>
