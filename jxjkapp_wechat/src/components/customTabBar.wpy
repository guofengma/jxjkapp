<style lang="scss">
  .comp-custom-tabBar {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    height: 100rpx;
    border-top: 2rpx solid #D9D9D9;
    background: #fff;

    .nav-item {
      text-align: center;
    }
    .nav-item__icon-wrap {
      margin-bottom: 10rpx;
    }
    .nav-item__icon {
      width: 44rpx;
      height: 44rpx;
    }
    .nav-item__text-wrap {
      font-size: 10px;
      text-align: center;
    }
  }
</style>

<template>
  <view class="comp-custom-tabBar flex--vcenter">
    <repeat for="{{ NAVS }}" key="index" item="item" index="index">
      <navigator
        wx:if="{{ '/' + currPath !== item.pagePath }}"
        url="{{ item.pagePath }}" 
        open-type="redirect"
        class="nav-item flex-item">
        <view class="nav-item__icon-wrap flex--hcenter">
          <image src="{{ item.iconPath }}" class="nav-item__icon"></image>
        </view>
        <view class="nav-item__text-wrap">
          <text>{{ item.text }}</text>
        </view>
      </navigator>
      <view
        wx:else=""
        url="{{ item.pagePath }}" 
        open-type="redirect"
        class="nav-item flex-item">
        <view class="nav-item__icon-wrap flex--hcenter">
          <image src="{{ item.iconPath }}" class="nav-item__icon"></image>
        </view>
        <view class="nav-item__text-wrap">
          <text>{{ item.text }}</text>
        </view>
      </view>
    </repeat>
  </view>
</template>

<script>
  import wepy from 'wepy'

  const NAVS = [{
    'pagePath': '/pages/index',
    'iconPath': '../assets/images/tab-index.png',
    'text': '首页'
  }, {
    'pagePath': '/pages/health',
    'iconPath': '../assets/images/tab-health.png',
    'text': '健康管理'
  }, {
    'pagePath': '/pages/my',
    'iconPath': '../assets/images/tab-my.png',
    'text': '我的'
  }]

  export default class CustomTabBar extends wepy.component {
    components = {
    }

    props = {
      imageUrl: String,
      title: String
    }

    mixins = []

    data = {
      NAVS,
      showNav: true,
      currPath: ''
    }

    computed = {
    }

    methods = {
    }

    events = {
    }

    onLoad() {
      const currRoute = this.getCurrentPages().slice(-1)[0]
      this.currPath = currRoute.route
      console.log(this.currPath)
    }
  }
</script>
