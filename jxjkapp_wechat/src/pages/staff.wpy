<style lang="scss">
@import '../assets/style/variables/theme.scss';

$search_h: 88rpx;
#page-staff {
  .search-bar {
    padding: 0 30rpx;
    height: $search_h;
    font-size: 12px;
    box-shadow: 0 2rpx 10rpx 0 #E3E3E3;

    .filter-btn {
      color: $primaryColor;
    }
    .search-input-wrap {
      margin-left: 40rpx;
      icon {
        // float: left;
        margin-right: -40rpx;
      }
      input {
        padding-left: 48rpx; 
        border: 2rpx solid #E6E6EA;
        border-radius: 28rpx;
        height: 56rpx;
      }
    }
  }

  .mask {
    position: absolute;
    z-index: 1;
    top: $search_h;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.4);
  }
  .filter-box {
    position: absolute;
    z-index: 2;
    top: $search_h;
    bottom: 0;
    left: 0;
    right: 0;

    .filter-items {
      padding: 20rpx 30rpx 30rpx;
    }

    %common {
      border: 2rpx solid transparent;
      border-radius: 50rpx;
      padding: 0 18rpx;
      height: 52rpx;
      line-height: 50rpx;
    }
    .filter-sort {
      margin-top: 20rpx;
    }
    .sort-label {
      @extend %common;
    }
    .filter-item {
      @extend %common;
      margin-right: 10rpx;
      text-align: center;

      &.picked {
        border-color: $primaryColor;
      }
    }

    .btn-wrap {
      border-top: 2rpx solid #F2F2F2;
      height: 60rpx;
      justify-content: flex-end;

      .reset-btn, .confirm-btn {
        height: 100%;
        width: 140rpx;
      }
      .reset-btn {
        color: $primaryColor;
      }
      .confirm-btn {
        color: #fff;
        background: $primaryColor;
      }
    }
  }

  .staff-list-wrap {
    padding: 0 40rpx;
  }
  .staff-list {
    margin-left: -30rpx;
  }
  .staff-item {
    margin-top: 30rpx;
    margin-left: 30rpx;
    padding: 30rpx;
    border-radius: 10rpx;
    width: 320rpx;
  }
  .avatar-wrap {
    image {
      overflow: hidden;
      border-radius: 50%;
      width: 100rpx;
      height: 100rpx;
    }
  }
  .name-wrap {
    margin-top: 30rpx;
    font-size: 16px;
    color: $primaryColor;
    text-align: center;
  }
  .intro-wrap {
    margin-top: 30rpx;
  }
}
</style>

<template>
  <view id="page-staff">
    <view class="search-bar flex--vcenter--sb">
      <view 
        class="filter-btn flex-item--none"
        @tap="openFilterBox">
        筛选
      </view>
      <view class="search-input-wrap flex-item flex--vcenter">
        <icon type="search" size="16"></icon>
        <input
          class="flex-item"
          value="{{ searchParams.searchWord }}" 
          placeholder-style="color: #B8B8B8;"
          placeholder="搜索" 
          bindconfirm="handleSearch"
          @focus="handleSearchFocus"
          @blur="handleSearchBlur"/>
      </view>
    </view>
    <view class="mask" hidden="{{ !filterVisible && !onSearch }}">
    </view>
    <view class="filter-box" hidden="{{ !filterVisible }}">
      <view class="box-inner main-bg">
        <view class="filter-items">
          <view class="filter-sort flex">
            <view class="sort-label flex-item--none">院区选择：</view>
            <view class="sort-items flex-item flex">
              <view class="filter-item flex-item--none">全部</view>
              <view class="filter-item flex-item--none">锦江院区</view>
              <view class="filter-item flex-item--none">青白江院区</view>
            </view>
          </view>
          <view class="filter-sort flex">
            <view class="sort-label flex-item--none">医生类别：</view>
            <view class="sort-items flex-item flex">
              <view class="filter-item flex-item--none picked">全部</view>
              <view class="filter-item flex-item--none picked">主治医生</view>
              <view class="filter-item flex-item--none">中级按摩师</view>
              <view class="filter-item flex-item--none">高级按摩师</view>
              <view class="filter-item flex-item--none">中级按摩师</view>
            </view>
          </view>
        </view>
        <view class="btn-wrap flex">
          <view 
            class="reset-btn flex--center"
            @tap="resetFilters">
            重置
          </view>
          <view 
            class="confirm-btn flex--center"
            @tap="submitFilters">
            确认
          </view>
        </view>
      </view>
    </view>
    <scroll-view
      scroll-y="true">
      <view class="staff-list-wrap">
        <view class="staff-list flex">
          <repeat 
            for="{{ listData }}"
            key="index"
            item="item"
            index="index">
            <view class="staff-item main-bg">
              <view class="avatar-wrap flex--center">
                <image src="{{ item.avatar }}"></image>
              </view>
              <view class="name-wrap">
                <text>{{ item.name }}</text>
              </view>
              <view class="intro-wrap text-ellipsis--two">
                <text>{{ item.intro }}</text>
              </view>
            </view>
          </repeat>
        </view>
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '医护人员'
    }
    components = {
    }

    mixins = []

    data = {
      searchParams: {
        searchWord: ''
      },
      onSearch: false, // 表示是否在搜索输入中
      filterVisible: false, // 筛选组件显示
      listData: [{
        avatar: '../assets/images/demo.png',
        name: '邓雪梅',
        intro: '主管，高级保健按摩师、高级美容师、高级护理主管，高级保健按摩师、高级美容师、高级护理'
      }, {
        avatar: '../assets/images/demo.png',
        name: '邓雪梅',
        intro: '主管，高级保健按摩师、高级美容师、高级护理主管，高级保健按摩师、高级美容师、高级护理'
      }, {
        avatar: '../assets/images/demo.png',
        name: '邓雪梅',
        intro: '主管，高级保健按摩师、高级美容师、高级护理主管，高级保健按摩师、高级美容师、高级护理'
      }]
    }

    computed = {
    }

    watch = {
      searchParams (newVal, oldVal) {
      }
    }

    methods = {
      handleSearchFocus () {
        this.onSearch = true
      },
      handleSearchBlur () {
        this.onSearch = false
      },
      openFilterBox () {
        this.filterVisible = true
      },
      resetFilters () {
      },
      submitFilters () {
        this.filterVisible = false
      },
      handleSearch ({ detail }) {
        const value = detail.value
        this.searchParams.searchWord = value
      }
    }

    events = {
    }

    onLoad() {
    }
  }
</script>
