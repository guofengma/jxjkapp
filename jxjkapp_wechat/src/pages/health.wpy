<style lang="scss">
@charset 'utf-8';
@import '../assets/style/variables/theme.scss';

  #health-page {
    padding-top: 40rpx;
    
    .order-item {
      margin-bottom: 20rpx;
      padding: 20rpx 30rpx;
      background: #fff;

      .order-date {
        font-size: 11px;
      }
      .order-from {
        font-size: 12px;
      }
      .order-thumbnail-wrap {
        position: relative;
        overflow: hidden;
        width: 228rpx;
        height: 156rpx;
        border-radius: 10rpx;

        &.child-project {
          &::before, &::after {
            position: absolute;
            bottom: 15px;
          }
          &::before {
            content: '\513F\7AE5';
            padding-left: 10rpx;
            width: 34px;
            right: 0;
            height: 16px;
            line-height: 16px;
            font-size: 10px;
            color: #fff;
            background: $primaryColor;
          }
          &::after {
            content: '';
            right: 34px;
            line-height: 0;
            border: 10rpx solid $primaryColor;
            border-width: 8px 4px 8px 4px;
            border-color: transparent $primaryColor $primaryColor transparent;
          }
        }
      }
      .order-summary {
        margin-top: 15rpx;
      }
      .order-thumbnail {
        width: 100%;
        height: 100%;
      }
      .order-text-wrap {
        margin-left: 48rpx;
      }
      .order-project {
        font-weight: bold;
      }
      .order-price {
        margin-top: 20rpx;
        font-size: 11px;
        color: $color1;
      }
    }
  }
</style>

<template>
  <CustomPage :isLastPage.sync="isLastPage">
    <view id="health-page">
      <view class="order-list">
        <repeat for="{{ listData }}" key="index" index="index" item="item">
          <navigator url="{{ '/pages/health_detail?orderProductId=' + item.orderProductId }}">
            <view class="order-item">
              <view class="row flex--vcenter--sb">
                <text class="order-date">订单生成时间: {{ item.date }}</text>
                <text class="order-from">{{ item.hospital }}</text>
              </view>
              <view class="order-summary flex">
                <view class="order-thumbnail-wrap {{ item.isChild ? 'child-project' : '' }}">
                  <image class="order-thumbnail flex-item--none" src="{{ item.image }}" alt=""/>
                </view>
                <view class="order-text-wrap flex-item flex--vcenter--sb">
                  <view class="flex--col">
                    <text class="order-project">{{ item.project }}</text>
                    <text class="order-price">数量：{{ item.total }} 已用：{{ item.usedNum }}</text>
                  </view>
                  <text style="color: {{orderStatusDict[item.status].color}}">{{orderStatusDict[item.status].text}}</text>
                </view>
              </view>
            </view>
          </navigator>
        </repeat>
      </view>
    </view>
  </CustomPage>
</template>

<script>
  import wepy from 'wepy'

  import CustomPage from '@/components/customPage'
  import listPageMixin from '@/mixins/listPage'

  const orderStatusDict = {
    'finish': {
      text: '已完成',
      color: '#2FC660'
    },
    'inUse': {
      text: '使用中',
      color: '#FFB400'
    }
  }

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '健康管理',
      enablePullDownRefresh: true
    }
    components = {
      CustomPage
    }

    mixins = [listPageMixin]

    data = {
      orderStatusDict
    }

    computed = {
    }

    methods = {
    }

    events = {
    }

    onShow () {
      if (this.toLogined) {
        wx.switchTab({
          url: '/pages/index'
        })
        this.toLogined = false
      } else {
        if (this.$_checkLogin('navigateTo')) {
          if (!(this.listData && this.listData.length)) {
            this.initPageData()
          }
        } else {
          this.toLogined = true
        }
      }
    }

    initPageData () {
      this.initData({
        url: '/order/all',
        method: 'POST',
        data: {
          pageSize: 5
        }
      }, (listItem, res) => {
        const hospArea = listItem.area || {}
        const hospOrderProductList = listItem.orderProductList || []
        const hospOrderProduct = (hospOrderProductList[0] || {})
        const skuData = hospOrderProduct.productSku || {}
        return {
          orderProductId: hospOrderProduct.id,
          productSkuId: skuData.id,
          id: listItem.id,
          image: skuData.images,
          date: this.$_convertDate(listItem.createDate),
          hospital: hospArea.name || '',
          project: hospOrderProduct.productSkuName,
          usedNum: hospOrderProduct.serviceQuantity - hospOrderProduct.remainingServiceNumber,
          total: hospOrderProduct.serviceQuantity,
          status: hospOrderProduct.serviceQuantity - hospOrderProduct.remainingServiceNumber ? 'finish' : 'inUse',
          isChild: false
        }
      }, 'navigateTo')
    }
  }
</script>
