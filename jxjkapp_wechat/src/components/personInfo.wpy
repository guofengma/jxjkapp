<style lang="scss">
@import '../assets/style/variables/theme';
.comp-person-info {
  font-size: 15px;

  .edit-btn-wrap {
    padding: 0 30rpx;
    height: 90rpx;

    .edit-btn {
      color: $primaryColor;
      background: transparent;
      font-size: 15px;

      &::after {
        border: 0;
      }

      &[disabled] {
        color: $color1;
      }
    }
  }
  .info-group {
    margin-bottom: 20rpx;
  }
  .info-item, .comp-picker-list .menu--default__item {
    padding: 20rpx 30rpx 20rpx 70rpx;
    height: auto;

    .item-label {
      position: relative;
      width: 134rpx;
      color: #818181;
      
      &::after {
        content: ':';
        position: absolute;
        right: 0;
        top: 50%;
        transform: translate3d(0, -50%, 0);
      }
    }
  }

  .info-item {

    & + .info-item {
      border-top: 2rpx solid #F2F2F2;
    }

    &.flex--sb {
      align-items: flex-start;
    }

    &.required {
      .item-label {
        position: relative;
        &:before {
          content: '*';
          position: absolute;
          left: -20rpx;
          top: 0;
          color: #FF4444;
        }
      }
    }
    
    .item-input {
      margin-left: 38rpx;

      &__inner {
        width: 100%;
      }
      textarea  {
        height: 80rpx;
      }

      &__tip {
        font-size: 12px;
        color: $color1;
        icon {
          margin-right: 10rpx;
        }
      }
    }
  }

  .submit-btn {
    button {
      margin: 60rpx 0;
    }
  }
}
</style>

<template>
  <view class="comp-person-info">
    <view wx:if="{{ canEdit }}" class="flex--vcenter--sb edit-btn-wrap">
      <button 
        class="edit-btn"
        disabled="{{ isMaster }}"
        @tap="unbindPatient">解绑</button>
      <button 
        class="edit-btn"
        disabled="{{ !readonly && !canSubmit }}"
        @tap="handleEditTap">{{ readonly ? '编辑' : '保存' }}</button>
    </view>
    <view class="info-group required-info main-bg">
      <view class="info-item required flex--vcenter--sb">
        <view class="item-label flex-item--none">就诊卡号</view>
        <view class="item-input flex-item">
          <IdInput
            class="item-input__inner"
            :disabled.sync="readonly"
            :value.sync="patientCard" />
        </view>
      </view>
      <view class="info-item required flex--sb">
        <view class="item-label flex-item--none">身份证号</view>
        <view class="item-input flex-item">
          <CardIdInput
            type="idcard"
            class="item-input__inner"
            :disabled.sync="readonly" 
            :value.sync="cardId" />
          <view 
            wx:if="{{ !readonly }}"
            class="item-input__tip flex--vcenter"><icon type="warn" size="14" color="#B8B8B8"/>只能绑定18岁以{{ isMaster ? '上的' : '下的未' }}成年人</view>
        </view>
      </view>
    </view>
    <view class="info-group main-bg">
      <view class="info-item flex--vcenter--sb">
        <view class="item-label flex-item--none">过敏史</view>
        <view class="item-input flex-item">
          <AllergiesInput 
            class="item-input__inner"
            :disabled.sync="readonly"
            :value.sync="allergies" />
        </view>
      </view>
      <view class="info-item flex--vcenter--sb">
        <view class="item-label flex-item--none">疾病史</view>
        <view class="item-input flex-item">
          <DiseaseInput 
            class="item-input__inner"
            :disabled.sync="readonly"
            :value.sync="disease" />
        </view>
      </view>
    </view>
    <view class="info-group main-bg">
      <PickerList 
        :readonly.sync="readonly"
        :ITEMS="PICKER_ITEMS"
        :lists.sync="pickerLists"
        :pickeds.sync="pickerPickeds"/>
    </view>
    <view class="info-group main-bg">
      <view class="info-item flex--sb">
        <view class="item-label flex-item--none">联系地址</view>
        <view class="item-input flex-item">
          <AddressInput
            class="item-input__inner"
            type="textarea"
            :disabled.sync="readonly"
            :value.sync="address"></AddressInput>
        </view>
      </view>
    </view>
    <view class="submit-btn flex--hcenter" wx:if="{{ !readonly && !canEdit }}">
      <button 
        class="primary-btn"
        disabled="{{ !canSubmit }}"
        @tap="submit">
        {{ submitBtnText }}
      </button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  import CustomInput from '@/components/customInput'
  import PickerList from '@/components/pickerList'

  import {
    validCardId
  } from '@/utils/validator'

  const PICKER_ITEMS = [{
    label: '分娩日期',
    picker: {
      mode: 'date',
      valueBind: 'deliveryDate',
      rangeBind: 'deliveryDate'
    }
  }, {
    label: '分娩情况',
    picker: {
      valueBind: 'deliveryInfo',
      rangeBind: 'deliveryInfo'
    }
  }, {
    label: '婴儿性别',
    picker: {
      valueBind: 'babySex',
      rangeBind: 'babySex'
    }
  }, {
    label: '客户来源',
    picker: {
      valueBind: 'userSource',
      rangeBind: 'userSource'
    }
  }]
  export default class CustomCard extends wepy.component {
    components = {
      PickerList,
      IdInput: CustomInput,
      CardIdInput: CustomInput,
      AllergiesInput: CustomInput,
      DiseaseInput: CustomInput,
      AddressInput: CustomInput
    }

    props = {
      readonly: {
        type: Boolean,
        default: false,
        twoWay: true
      },
      canEdit: { // 依托于readonly参数
        type: Boolean,
        default: false
      },
      isMaster: { // 是否是主绑定人
        type: Boolean,
        default: true
      },
      submitBtnText: {
        type: String
      }
    }

    mixins = []

    data = {
      canSubmit: false,
      patientCard: '', // 卡号
      cardId: '', // 身份证号
      allergies: '', // 过敏史
      disease: '', // 疾病史
      address: '', // 联系地址
      PICKER_ITEMS,
      pickerLists: {
        deliveryInfo: [{
          value: '顺利',
          label: '顺利'
        }, {
          value: '不顺利',
          label: '不顺利'
        }],
        babySex: [{
          value: 0,
          label: '女'
        }, {
          value: 1,
          label: '男'
        }],
        userSource: [{
          value: '介绍',
          label: '介绍'
        }, {
          value: '网络推广',
          label: '网络推广'
        }]
      },
      pickerPickeds: {
      }
    }

    computed = {
      formData () {
        return {
          type: this.isMaster ? 0 : 1,
          patientCard: this.patientCard,
          cardId: this.cardId,
          allergies: this.allergies,
          disease: this.disease,
          address: this.address,
          ...this.pickerPickeds
        }
      }
    }

    watch = {
      formData (newVal) {
        const patientCard = newVal.patientCard && (newVal.patientCard + '').trim()
        const cardId = newVal.cardId && newVal.cardId.trim()
        if (patientCard && validCardId(cardId)) {
          this.canSubmit = true
        } else {
          this.canSubmit = false
        }
        this.$apply()
        this.$emit('formDataChange', newVal)
      }
    }

    methods = {
      handleEditTap () {
        if (this.readonly) {
          this.readonly = false
        } else {
          this.$emit('editSubmit')
        }
      },
      submit () {
        this.$emit('submit', this.formData)
      },
      unbindPatient () {
        this.$emit('unbindPatient', this.formData)
      }
    }

    events = {
    }

    onLoad() {
    }

    syncFormData (formData) {
      const {patientCard, cardId, allergies, disease, address, ...pickerPickeds} = formData
      this.patientCard = patientCard
      this.cardId = cardId
      this.allergies = allergies
      this.disease = disease
      this.address = address
      this.pickerPickeds = pickerPickeds
      console.log('pickerPickeds', pickerPickeds)
      this.$apply()
    }
  }
</script>
