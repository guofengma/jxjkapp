<template>
  <CustomPage>
    <view id="page-service-list">
      <scroll-view 
        scroll-x
        class="patient-list-wrap list-top-tools">
        <view class="flex patient-list">
          <repeat for="{{ listData }}" key="index" item="item" index="index">
            <view 
              class="flex-item--none flex--center patient-item {{ activePatient.id === item.patientInfo.id ? 'active' : '' }}"
              @tap="handlePickPatient({{ item.patientInfo }})">
              {{ item.patientInfo && item.patientInfo.name }}
            </view>
          </repeat>
        </view>
      </scroll-view>
      <view class="list-wrap">
        <repeat for="{{ orderList }}" key="index" item="item" index="index">
          <view class="service-box">
            <view class="service-head">
              <text class="service-name">{{ item.productSkuName }}</text>
              <text class="service-time">派单时间：{{ item.createDate }}</text>
            </view>
            <view class="service-bto">
              <view class="service-btn" @tap="acceptOrder({{item.id}}, {{ item }})">接单</view>
            </view>
          </view>
        </repeat>
      </view>
    </view>
  </CustomPage>
</template>

<script>
  import wepy from 'wepy'
  import CustomPage from '@/components/customPage'
  import pageMixin from '@/mixins/page'

  export default class serviceList extends wepy.page {
    config = {
      navigationBarTitleText: '记录详情',
      enablePullDownRefresh: true
    }
    components = {
      CustomPage
    }

    mixins = [pageMixin]

    data = {
      listData: [],
      activePatient: '',
      orderList: []
    }

    computed = {
      userInfo () {
        return this.$parent.globalData.userInfo
      },
      orderList () {
        return (this.listData.find(item => {
          return item.patientInfo === this.activePatient
        }) || this.listData[0] || {}).orderService || []
      }
    }

    watch = {
      listData (newVal) {
        // patientInfo  orderService
        this.activePatient = newVal[0].patientInfo
      }
    }

    methods = {
      handlePickPatient (value) {
        this.activePatient = value
      },
      acceptOrder (id, item) {
        wx.showModal({
          title: '提示',
          content: '确定接单？',
          confirmColor: '#9190FF',
          success: (res) => {
            if (res.confirm) {
              this.$_request({
                url: `/serviceRecord/create?orderDetailId=${id}&areaId=${(this.$parent.globalData.userInfo || {}).areaId}`,
                method: 'POST',
                data: {
                  orderDetailId: id,
                  areaId: (this.$parent.globalData.userInfo || {}).areaId
                }
              }).then(() => {
                wx.showToast({
                  title: '接单成功'
                })
                this.initPageData()
                this.$_eventBus.emit('serviceHistory:init')
                wx.switchTab({
                  url: '/pages/serviceHistory'
                })
              })
            }
          }
        })
      }
    }
    
    onLoad ({id}) {
      this.id = id
      this.$_onPageShow(this, () => {
        this.initPageData()
      })
    }

    initPageData () {
      return this.initData({
        url: `/service/listByUserId?userId=${this.id}`,
        method: 'GET'
      }).then((content) => {
        const patients = []
        const records = content.records || []
        records.forEach(item => {
          const patient = patients.find(patientItem => patientItem.patientInfo.id === item.patientInfoId)
          if (patient) {
            patient.orderService.push({
              productSkuName: item.skuName,
              createDate: item.createDate,
              id: item.orderId
            })
          } else {
            patients.push({
              patientInfo: {
                id: item.patientInfoId,
                name: item.patientName
              },
              orderService: [{
                productSkuName: item.skuName,
                createDate: item.createDate,
                id: item.orderId
              }]
            })
          }
        })
        this.listData = patients
        this.$apply()
      })
    }
  }
</script>

<style lang="scss">
@import '../assets/style/variables/theme.scss';
@import '../assets/style/variables/size.scss';

#page-service-list {
  padding-top: $topTools_H;

  .patient-list-wrap {
    color: inherit;
  }
  .patient-list {
    height: 100%;
    .patient-item {
      padding: 0 10px;
      &.active {
        color: $primaryColor;
      }
    }
  }

  .service {
    &-box {
      margin-bottom: 20rpx;
      padding: 0 30rpx;
      background-color: #fff;
    }
    &-head {
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-bottom: 1px solid #F2F2F2;
      padding: 40rpx 0 20rpx;
    }
    &-name {
      font-size: 28rpx;
      color: #414141;
    }
    &-time {
      font-size: 24rpx;
      color: #B8B8B8;
    }
    &-msg {
      display: flex;
    }
    &-user {
      font-size: 26rpx;
      color: #818181;
      margin-top: 20rpx;
      display: flex;
      flex-direction: column;
    }
    &-bto {
      display: flex;
      justify-content: flex-end;
      padding: 20rpx 0;
    }
    &-btn {
      font-size: 26rpx;
      color: #fff;
      background-color: #FFB400;
      width: 120rpx;
      height: 52rpx;
      border-radius: 5rpx;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }
}
</style>
